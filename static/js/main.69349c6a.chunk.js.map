{"version":3,"sources":["components/App/TodoItem.js","constants/style.js","components/App/useTodos.js","components/App/useInput.js","components/App/App.js","index.js"],"names":["TodoItemWrapper","styled","div","EditTodo","input","TodoContent","props","$isDone","TodoBtnWrapper","Button","button","RedButton","TodoItem","content","todo","handleDeleteTodo","handleToggleIsDone","handleEditChange","handleUpdateTodo","isEditing","isDone","e","id","onClick","useTodos","useRef","useState","value","setValue","handleChange","target","useInput","filter","setFilter","todoData","window","localStorage","getItem","length","JSON","parse","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","handleBtnClick","alert","map","handlehandleDeleteAll","renderAll","renderUndone","renderDone","item","Container","theme","colors","blue_1","yellow_1","ButtonWrapper","App","handleDeleteAll","type","placeholder","onChange","ReactDOM","render","blue_2","blue_3","yello_1","yello_2","yello_3","document","getElementById"],"mappings":"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","file":"static/js/main.69349c6a.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { MEDIA_QUERY_MD } from \"../../constants/style\";\nimport PropTypes from \"prop-types\";\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\n\nconst EditTodo = styled.input`\n  max-width: 400px;\n  padding: 2px;\n`;\n\nconst TodoContent = styled.div`\n  color: #000;\n  font-size: 16px;\n\n  ${(props) => props.$isDone && `text-decoration: line-through`}\n`;\n\nconst TodoBtnWrapper = styled.div``;\n\nconst Button = styled.button`\n  padding: 4px;\n  color: black;\n  font-size: 20px;\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n\n  &:hover {\n    color: green;\n  }\n\n  & + & {\n    margin-left: 8px;\n  }\n`;\n\nconst RedButton = styled(Button)`\n  color: red;\n`;\n\nexport default function TodoItem({\n  content,\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  handleEditChange,\n  handleUpdateTodo,\n}) {\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper>\n      {!todo.isEditing && (\n        <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      )}\n      {todo.isEditing && (\n        <EditTodo>\n          value={todo.content}\n          onChange={(e) => handleEditChange(todo.id, e)}\n        </EditTodo>\n      )}\n      <TodoContent $isDone={todo.isDone}>{content}</TodoContent>\n      <TodoBtnWrapper>\n        {!todo.isDone && (\n          <Button onClick={() => handleUpdateTodo(todo)}>編輯</Button>\n        )}\n        {!todo.isEditing && (\n          <Button\n            onClick={() => {\n              handleToggleClick(todo.id);\n            }}\n          >\n            {todo.isDone ? \"未完成\" : \"已完成\"}\n          </Button>\n        )}\n        <RedButton onClick={handleDeleteClick}>刪除</RedButton>\n      </TodoBtnWrapper>\n    </TodoItemWrapper>\n  );\n}\n\nTodoItem.propTypes = {\n  content: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n    isEditing: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  handleEditChange: PropTypes.func,\n  handleUpdateTodo: PropTypes.func,\n};\n","export const MEDIA_QUERY_MD = \"@media screen and (min-width: 768px)\";\nexport const MEDIA_QUERY_LG = \"@media screen and (min-width: 1000px)\";\n","import { useState, useEffect, useRef } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  const id = useRef(1);\n  const { value, setValue, handleChange } = useInput();\n  const [filter, setFilter] = useState(\"all\");\n\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem(\"todos\") || [];\n    if (todoData.length > 2) {\n      todoData = JSON.parse(todoData);\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n\n  const handleBtnClick = () => {\n    if (!value) return alert(\"請輸入內容\");\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n        isEditing: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id.current++;\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const renderAll = () => {\n    setFilter(\"all\");\n  };\n\n  const renderUndone = () => {\n    setFilter(\"undone\");\n  };\n\n  const renderDone = () => {\n    setFilter(\"done\");\n  };\n\n  const handlehandleDeleteAll = () => {\n    setTodos([]);\n  };\n\n  const handleUpdateTodo = (todo, e) => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id !== todo.id) return item;\n        return {\n          ...item,\n          isEditing: !item.isEditing,\n        };\n      })\n    );\n  };\n\n  const handleEditChange = (id, e) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n\n  return {\n    filter,\n    setFilter,\n    id,\n    todos,\n    setTodos,\n    handleBtnClick,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    value,\n    setValue,\n    handleChange,\n    handlehandleDeleteAll,\n    renderAll,\n    renderUndone,\n    renderDone,\n    handleEditChange,\n    handleUpdateTodo,\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useInput() {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  return { value, setValue, handleChange };\n}\n","import TodoItem from \"./TodoItem\";\nimport useTodos from \"./useTodos\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  background: #0abab5;\n  max-width: 600px;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 40px;\n  border-radius: 20px;\n  h1 {\n    color: ${(props) => props.theme.colors.blue_1};\n    text-align: center;\n  }\n  input {\n    width: 98%;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n  }\n  button {\n    padding: 5px;\n    background: white;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n    &:hover {\n      cursor: pointer;\n      background: ${(props) => props.theme.colors.blue_1};\n      color: ${(props) => props.theme.colors.yellow_1};\n    }\n  }\n  .addTodo {\n    width: 100%;\n    font-size: 16px;\n    margin: 10px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n  button + button {\n    margin-left: 5px;\n  }\n`;\n\nfunction App() {\n  const {\n    todos,\n    filter,\n    handleBtnClick,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    value,\n    handleChange,\n    renderAll,\n    renderDone,\n    renderUndone,\n    handleDeleteAll,\n    handleEditChange,\n    handleUpdateTodo,\n  } = useTodos();\n\n  return (\n    <Container>\n      <input\n        type=\"text\"\n        placeholder=\"todo\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button onClick={handleBtnClick}>Add todo</button>\n      {todos\n        .filter((todo) => {\n          if (filter === \"all\") return todo;\n          if (filter === \"done\") return todo.isDone;\n          return !todo.isDone;\n        })\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n            handleEditChange={handleEditChange}\n            handleUpdateTodo={handleUpdateTodo}\n          />\n        ))}\n      <ButtonWrapper>\n        <div>\n          <button onClick={renderAll}>全部</button>\n          <button onClick={renderDone}>已完成</button>\n          <button onClick={renderUndone}>未完成</button>\n        </div>\n        <div>\n          <button onClick={handleDeleteAll}>清空全部</button>\n        </div>\n      </ButtonWrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    blue_1: \"#2A3F6F\",\n    blue_2: \"#455A89\",\n    blue_3: \"#06163A\",\n    yello_1: \"#A68332\",\n    yello_2: \"#CCAA5C\",\n    yello_3: \"#563C00\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}